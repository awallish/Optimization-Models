Maybe we don't require that all funds be invested, so we can define another guaranteed return function (perhaps a bond) which is strictly monotonic and increasing.  f(x) = 1.001x for example



What if we don't have to invest discrete amounts? What is the time complexity of taking a derivative? -- time complexity is O(n) so this wouldn't help --
wait, but we can compute the derivitaves in advance and cache them, right?
Nah, this is a bit of a wormhole.  We're not going to consider non-discrete



Solution to the trivial problem is (X+1)(P) where P is the number of investement projects and X is the discrete amount you have to invest
Runtime complexity: O(X*P)



in reality, f(0) = 0 for any return function f (you're not going to get a positive return for investing zero, right?)




Maybe i need to do this iteratively so that we can have the complete expanded form 


stochastic calculus


because we are not iterating over the entire range of sigma(x), we are not guaranteed any number of cache hits.  

we are not guaranteed that V(j, x, sigma1) = V(j, x, sigma2), so we have to cache according to (j, x, sigma) not just (j, x)



perhaps the reason performance is so bad is because we have to try so many cases.

In the worst case, there is only one possible solution which satisfies the sigma requiremnet, which means we will have no cache hits.  


https://papers.ssrn.com/sol3/papers.cfm?abstract_id=305006 --
hedge funds can have significantly lower risk, with statistically insignifact differences in expected return. 




"Real World" Example.
Hedge Fund which charges a heavy flat management fee upfront, but invests in securites that have no real upper bound. risk grows linearly. 

Hedge Fund which employs statistical arb, and has upper bound.  Shows some sort of logistic growth.  risk grows exponentially. red and blue.

Bond. Depositing in bank.  Linear growth.  risk is always zero.




TODO:

proofread
email github link
print
